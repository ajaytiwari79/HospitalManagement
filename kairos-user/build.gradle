buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
		swaggerVersion = '2.5.0'
		jacksonVersion= '2.5.4'
		neo4jBoltDriverVersion = '2.1.1'
		neo4jOgmVersion="2.1.1"
        projectVersion="0.0.1"
        version="0.0.1"
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.springframework:springloaded:1.2.7.RELEASE'
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1"
	}
}

plugins {
	id "org.sonarqube" version "2.2.1"
    id 'net.researchgate.release' version '2.4.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: "org.sonarqube"

version = "$projectVersion-SNAPSHOT"
sourceCompatibility = 1.8
mainClassName = 'com.kairos.UserServiceApplication'

repositories {
	mavenCentral()
	jcenter()
}

idea {
	module {
		inheritOutputDirs = false
		outputDir = file("$buildDir/classes/main/")
	}
}

task wrapper(type: Wrapper) { gradleVersion = '4.1' }

ext {
	springCloudVersion = 'Dalston.SR3'
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('org.springframework.cloud:spring-cloud-starter-hystrix')
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
	compile('org.springframework.cloud:spring-cloud-starter-security')
	compile('org.springframework.boot:spring-boot-starter-data-neo4j')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile("org.springframework.ws:spring-ws-core:2.3.0.RELEASE")
	compile group: 'com.sun.mail', name: 'javax.mail', version:'1.5.6'
	// Google Calender API
	compile 'com.google.api-client:google-api-client:1.22.0'
	compile 'com.google.oauth-client:google-oauth-client-jetty:1.22.0'
	compile 'com.google.apis:google-api-services-calendar:v3-rev239-1.22.0'
	//twillio
	compile group: 'com.twilio.sdk', name: 'twilio-java-sdk', version: '6.3.0'

	// https://mvnrepository.com/artifact/org.springframework.data/spring-data-redis
	//compile group: 'org.springframework.data', name: 'spring-data-redis', version: '1.8.4.RELEASE'
	// https://mvnrepository.com/artifact/redis.clients/jedis
	compile group: 'redis.clients', name: 'jedis', version: '2.9.0'
   // https://mvnrepository.com/artifact/javax.mail/mail
	compile group: 'javax.mail', name: 'mail', version: '1.4'

     // https://mvnrepository.com/artifact/org.apache.poi/poi
	compile group: 'org.apache.poi', name: 'poi', version: '3.10-FINAL'
	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.10-FINAL'

	// https://mvnrepository.com/artifact/joda-time/joda-time
	compile group: 'joda-time', name: 'joda-time', version: '2.9.4'

	compile group: 'org.neo4j', name: 'neo4j-ogm-bolt-driver', version: neo4jBoltDriverVersion

	compile group: 'org.neo4j', name: 'neo4j-ogm-core', version: neo4jOgmVersion


	// Swagger
	compile "io.springfox:springfox-swagger2:${swaggerVersion}"
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: swaggerVersion
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: jacksonVersion
	compile group: 'org.json', name: 'json', version: '20160810'
	// https://mvnrepository.com/artifact/com.lowagie/itext
	compile group: 'com.lowagie', name: 'itext', version: '4.2.1'
	compile 'org.springframework:springloaded:1.2.7.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-jwt
	compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.8.RELEASE'


	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}



def profile = "development"
bootRun {
	args = ["--spring.profile.active="+profile]
	systemProperty "spring.profiles.active", "development"
}
// Task Properties to be able to push to sonarqube
sonarqube {
    properties {
        property "sonar.projectName", "kairos-user"
        property "sonar.projectKey", "KC-U"
        property "sonar.projectVersion",projectVersion
        property "sonar.login","admin"
        property "sonar.password","Oodlesadmin@123"
        property "sonar.exclusions", "**/test/**"
        //f1601d358fe3614c11dd5c9ceb3b9402e648fa08
        property "sonar.host.url","http://dev.kairosplanning.com:9000"
    }
}

//gradle release plugin
release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '${version}'
    versionPropertyFile = 'app-version.properties'
    versionProperties = []
    buildTasks = ['build']
    git {
        requireBranch = 'release-plugin'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
    }


}
server.port = 8084
spring.profiles.active=local

spring.application.name=kairos-scheduler

server.servlet.context-path=/kairos/scheduler


logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
logging.level.com.kairos=INFO

logging.file=/opt/kairos/micro-service-logs/scheduler-service/kairos-scheduler.log
# Logging pattern for the console
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n

# Logging pattern for file
logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n




spring.data.mongodb.database=scheduler
#spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.
#spring.data.mongodb.grid-fs-database= # GridFS database name.
spring.data.mongodb.host=localhost
#spring.data.mongodb.password= # Login password of the mongo server. Cannot be set with uri.
spring.data.mongodb.port=27017
spring.data.mongodb.repositories.enabled=true
spring.data.mongodb.uri=mongodb://localhost/scheduler



management.security.flag=false
management.context-path=/kairos/scheduler/actuator

#Eureka client setting
# load ribbon on startup
eureka.instance.leaseRenewalIntervalSeconds=5
eureka.instance.leaseExpirationDurationInSeconds=10
eureka.client.initialInstanceInfoReplicationIntervalSeconds=0
eureka.client.instanceInfoReplicationIntervalSeconds=10
eureka.client.registryFetchIntervalSeconds=10
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.healthcheck.enabled=true
eureka.instance.statusPageUrlPath=${management.context-path}/info
eureka.instance.healthCheckUrlPath=${management.context-path}/health
eureka.instance.metadataMap.management.context-path=${management.context-path}
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8761/eureka/
# load ribbon on startup
ribbon.ServerListRefreshInterval=10000
ribbon.egar-load.enabled=true
eureka.client.enabled=true
ribbon.eureka.enabled= true
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=groupId
spring.kafka.enable.auto.commit=true
spring.kafka.auto.commit.interval.ms=100
spring.kafka.session.timeout.ms=15000
spring.kafka.retries=0
spring.kafka.batch.size=16384
spring.kafka.linger.ms=1
spring.kafka.buffer.memory=33554432
spring.kafka.producer.properties.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.properties.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer

scheduler.authorization=bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkZXRhaWxzIjp7ImlkIjoxOCwidXNlck5hbWUiOiJ1bHJpa0BrYWlyb3MuY29tIiwibmlja05hbWUiOiJVbHJpayIsImZpcnN0TmFtZSI6IlVscmlrIiwibGFzdE5hbWUiOiJSYXNtdXNzZW4iLCJlbWFpbCI6InVscmlrQGthaXJvcy5jb20iLCJwYXNzd29yZFVwZGF0ZWQiOnRydWUsImFnZSI6NjcsImNvdW50cnlJZCI6bnVsbCwiaHViTWVtYmVyIjpmYWxzZSwibGFuZ3VhZ2VJZCI6MjcwNDR9LCJleHAiOjE1Mzk0MzA0MTgsInVzZXJfbmFtZSI6InVscmlrQGthaXJvcy5jb20iLCJqdGkiOiI5MTI3NmU1Yy1jOWEzLTQ5MWUtOWU2YS1kOTAxOTk5YmQzNDAiLCJjbGllbnRfaWQiOiJrYWlyb3MiLCJzY29wZSI6WyJ3ZWJjbGllbnQiXX0.KWPlN3A0lo5yMK0_lg5g_wCQiDeFCMbOkrehpqUdI2g

user.loginapi.authUsername=systemuser@kairos.com
user.loginapi.authPassword=admin@kairos
user.loginapi.authToken=Basic a2Fpcm9zOmthaXJvcw==
gateway.userserviceauth.url=http://zuulservice/kairos/user/oauth/token
gateway.userservice.url=http://zuulservice/kairos/user/api/v1/

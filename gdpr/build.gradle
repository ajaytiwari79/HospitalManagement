buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
        jacksonVersion = '2.9.2'
        projectVersion = "0.0.1"
        version = "0.0.1"
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"
apply plugin: 'application'

version = "$projectVersion-SNAPSHOT"

sourceCompatibility = 1.8
mainClassName = 'com.kairos.KairosGdprApplication'
applicationDefaultJvmArgs = ["-Xms512m", "-Xmx1536m"]
repositories {
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.spring.io/plugins-release" }
    maven { url "http://repo.spring.io/release/" }
}
task wrapper(type: Wrapper) { gradleVersion = '4.4' }
ext {
    springCloudVersion = 'Finchley.RELEASE'
}
dependencies {

    compile project(':kcommons')
    compile project(':kpermissions')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compile('org.slf4j:slf4j-api:1.7.7')
    //compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-mail')
    // compile('org.apache.jackrabbit:jackrabbit-jcr-commons:2.17.2')
    //compile('org.apache.jackrabbit:jackrabbit-jcr2dav:2.10.1')
    //compile('javax.jcr:jcr:2.0')
    //compile('org.apache.jackrabbit:oak-jcr:1.7.6')
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.424'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-core', version: '1.11.424'
    compile('org.apache.commons:commons-lang3:3.0')
    compile('org.springframework.cloud:spring-cloud-starter-oauth2')
    // swagger
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'

    //compile('org.javers:javers-spring-boot-starter-mongo:3.10.0')
    compile 'org.javers:javers-spring-boot-starter-sql:5.1.3'
    compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.8.RELEASE'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile group: 'org.reflections', name: 'reflections', version: '0.9.10'

}
sonarqube {
    properties {
        property "sonar.projectName", "gdpr"
        property "sonar.projectKey", "kairos:gdpr"
        property "sonar.sources", "src/main"
        property "sonar.skip.tests", "true"
        property "sonar.exclusions", "**/*test*/**"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


bootRun.systemProperties = System.properties
#server port setting
server.port=8090

spring.application.name=activity-service
#application context path
server.servlet.context-path=/kairos/activity

spring.profiles.active=local

#Max Size for Http Header  10 KB (Default was 8KB)
server.tomcat.max-http-header-size=10000

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
#management setting
management.security.flag=false
management.context-path=/kairos/activity/actuator

#logging setting
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.springframework.web=INFO
logging.level.com.kairos=INFO
logging.level.org.springframework.web.socket.config.WebSocketMessageBrokerStats = INFO
logging.level.org.springframework.data=INFO

logging.file=/opt/kairos/micro-service-logs/activity-service/kairos-activity.log
# Logging pattern for the console
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n

# Logging pattern for file
logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n

#eureka setting
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.client.healthcheck.enabled=true
eureka.instance.statusPageUrlPath=${management.context-path}/info
eureka.instance.healthCheckUrlPath=${management.context-path}/health
eureka.instance.metadataMap.management.context-path=${management.context-path}
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8761/eureka/


# load ribbon on startup
ribbon.egar-load.enabled=true

scheduler.name=optaPlanner

gateway.userservice.url=http://zuulservice/kairos/user/api/v1/
eureka.client.enabled=true
ribbon.eureka.enabled= true
gateway.schedulerservice.url=http://zuulservice/kairos/scheduler/api/v1
gateway.plannerservice.url=http://zuulservice/kairos/planner



spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=groupId
spring.kafka.enable.auto.commit=true
spring.kafka.auto.commit.interval.ms=100
spring.kafka.session.timeout.ms=15000
spring.kafka.retries=0
spring.kafka.batch.size=16384
spring.kafka.linger.ms=1
spring.kafka.buffer.memory=33554432
spring.kafka.producer.properties.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.properties.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer

log4j.logger.com.org.springframework.kafka.KafkaListenerEndpointContainer=ERROR
log4j.logger.com.org.apache.kafka=ERROR
user.loginapi.authUsername=systemuser@kairos.com
user.loginapi.authPassword=admin@kairos
user.loginapi.authToken=Basic a2Fpcm9zOmthaXJvcw==
gateway.userserviceauth.url=http://zuulservice/kairos/user/oauth/token
webservice.imagesPath=static/kairos/images/

#Thymeleaf
spring.thymeleaf.cache=false

kpermissions.data.publish=false
kpermissions.model.package.path=com.kairos.persistence


aws.mail.server.region=eu-central-1
email.provider.active=AWS-SES
#email.provider.active=SENDGRID
tracker.raygun.client.key=5rsDxOrGnPkGcesJraORg
spring.main.allow-bean-definition-overriding=true
buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
        swaggerVersion = '2.6.1'
        jacksonVersion = '2.9.2'
        projectVersion = "0.0.1"
        version = "0.0.1"
    }
    repositories {
        mavenCentral()
        jcenter()
        maven{url "https://plugins.gradle.org/m2/"}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

version = "$projectVersion-SNAPSHOT"

sourceCompatibility = 1.8
mainClassName = 'com.kairos.KairosActivityApplication'

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    maven{url "https://repo.spring.io/plugins-release"}
    maven { url "http://repo.spring.io/release/" }
}

task wrapper(type: Wrapper) { gradleVersion = '4.4' }

ext {
    springCloudVersion = 'Finchley.RELEASE'
}

dependencies {
    compile project(':kcommons')

    compile("org.springframework.boot:spring-boot-starter-web")
	compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-aop') 
    compile('org.springframework.boot:spring-boot-starter-cache') 
    compile group: 'javax.inject', name: 'javax.inject', version: '1'

    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
    compile('org.springframework.cloud:spring-cloud-starter-oauth2')
    compile('org.springframework.cloud:spring-cloud-starter-security')

        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")

    compile('org.springframework.boot:spring-boot-starter-websocket')

    compile group: 'org.springframework.ws', name: 'spring-ws-core', version: '3.0.0.RELEASE'

    // use in import sheet
    compile group: 'org.apache.poi', name: 'poi', version: '3.10-FINAL'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.10-FINAL'

    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: jacksonVersion
    compile group: 'org.json', name: 'json', version: '20160810'
    compile "io.springfox:springfox-swagger2:${swaggerVersion}"
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: "${swaggerVersion}"

    compile 'com.google.api-client:google-api-client:1.22.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.22.0'
    compile 'com.google.apis:google-api-services-calendar:v3-rev239-1.22.0'//c0
    //javers
    compile ('org.javers:javers-spring-boot-starter-mongo:3.10.0')
    //compile group: 'joda-time', name: 'joda-time', version: '2.9.4'
    compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.8.RELEASE'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'commons-validator', name: 'commons-validator', version: '1.6'
    compile group: 'com.twilio.sdk', name: 'twilio-java-sdk', version: '6.3.0'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile (('org.springframework.kafka:spring-kafka:2.1.7.RELEASE'))

    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.5'
    
    //this is for hot swaping in intelij
    compile('org.springframework.boot:spring-boot-devtools')


}

sonarqube {
    properties {
        property "sonar.projectName", "activity"
        property "sonar.projectKey", "kairos:activity"
        property "sonar.sources", "src/main"
        property "sonar.skip.tests", "true"
        property "sonar.exclusions", "**/*test*/**"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

package com.kairos.shiftplanning.rules;
    dialect "java"
import com.kairos.shiftplanning.domain.*;
import com.kairos.shiftplanning.utils.ShiftPlanningUtility;
import java.util.ArrayList;
import org.optaplanner.core.api.score.buildin.hardmediumsoftlong.HardMediumSoftLongScoreHolder;
global HardMediumSoftLongScoreHolder scoreHolder;
/********Default StaffingLevel Activity Rules*******/
rule "Empty activityPlannerEntity line 2"
salience 20
    when
        //$alis:ArrayList(size>0) from collect (ActivityLineInterval(shift!=null));
        //$shifts:ArrayList(size>0) from collect (ShiftRequestPhase(getInterval()!=null));
        //$matrix:StaffingLevelMatrix();
        $shifts:ArrayList() from collect (ShiftRequestPhase(getInterval()!=null));
        $breaks:ArrayList() from collect (ShiftBreak(getInterval()!=null)); //==null would be considered in different rule
        $indirectActivities:ArrayList() from collect (IndirectActivity(startTime!=null));
        $matrix:StaffingLevelMatrix();
    then
        int[] arr=$matrix.getMissingMinAndMax($shifts,$breaks,$indirectActivities);
        scoreHolder.addSoftConstraintMatch(kcontext,  arr[0]*-2 + arr[1]*-1);
end

rule "Break not planned in Interval"
salience 20
    when
        ShiftBreak(!isPlannedInInterval())
    then
        scoreHolder.addMediumConstraintMatch(kcontext,  -1);
end
//TODO this does not check for other ind activities
rule "Indirect Activity"
salience 20
    when
        $indirectActivities:IndirectActivity(startTime!=null);
        $breaks:ArrayList() from collect (ShiftBreak());
        $shifts:ArrayList() from collect (ShiftRequestPhase(getInterval()!=null
         && isAvailableThisInterval($indirectActivities.getInterval(),$breaks ) && hasAnyEmployee($indirectActivities.getEmployees())));
        Boolean(booleanValue==true) from ($indirectActivities.getEmployees().size()!=$shifts.size())
    then
        scoreHolder.addMediumConstraintMatch(kcontext,  -1);
end

rule "Indirect Activity Unassigned"
salience 20
    when
        IndirectActivity(startTime==null)
    then
        scoreHolder.addSoftConstraintMatch(kcontext,  -20);
end

/*
rule "TP"
salience 20
    when
        $matrix:StaffingLevelMatrix();
    then
        $matrix.tp();
end

rule "TP-2"
salience 20
    when
        $shifts:ArrayList() from collect (ShiftRequestPhase());
    then
        ShiftPlanningUtility.tp2($shifts);
        scoreHolder.addSoftConstraintMatch(kcontext,  -1);
end

*/
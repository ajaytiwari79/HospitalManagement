package com.kairos.shiftplanning.rules;
    dialect "java"
import com.kairos.shiftplanning.domain.*;
import com.kairos.shiftplanning.utils.ShiftPlanningUtility;
import java.util.ArrayList;
import org.optaplanner.core.api.score.buildin.hardmediumsoftlong.HardMediumSoftLongScoreHolder;
global HardMediumSoftLongScoreHolder scoreHolder;
/********Activity Rules*******/
rule "Max Allocation Per Shift"
salience 20
    when
        $ac:Activity()
        $shift:ShiftRequestPhase(!activityLineIntervals.isEmpty() && hasIntervalsForActivity($ac))
        $constraintsPenality: Integer(intValue>0) from ($ac.checkActivityConstraints($shift,3))
    then
        $ac.breakActivityContraints(null,scoreHolder,kcontext,$constraintsPenality,  3);
end

rule "Max Different Activity"
salience 20
    when
        $ac:Activity()
        $shift:ShiftRequestPhase(!activityLineIntervals.isEmpty())
        $constraintsPenality: Integer(intValue>0) from ($ac.checkActivityConstraints($shift,4))
    then
        $ac.breakActivityContraints(null,scoreHolder,kcontext,$constraintsPenality,  4);
end

rule "Min Length of Activity"
salience 20
    when
        $ac:Activity()
        $shift:ShiftRequestPhase(!activityLineIntervals.isEmpty() && hasIntervalsForActivity($ac))
        $constraintsPenality: Integer(intValue>0) from ($ac.checkActivityConstraints($shift,6))
    then
        $ac.breakActivityContraints(null,scoreHolder,kcontext,$constraintsPenality, 6);
end
/*
rule "Activity skills satisfaction"
salience 20
    when
        $ac:Activity()
        $shift:ShiftRequestPhase(activityLineIntervals.size()>0)
        $constraintsPenality: Integer(intValue>0) from ($ac.checkActivityConstraints($shift,5))
    then
        $ac.breakActivityContraints($shift,scoreHolder,kcontext,$constraintsPenality,  5);
end
*/
/********Activity Rules Ends*******/

